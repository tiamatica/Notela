:Class ObservableGauge
    :Include Tools
⍝
    :Field Private Instance name
    
    ∇ make args
      :Access Public
      :Implements Constructor   
      :If {0::1 ⋄ ~(⊃⊃⎕CLASS ⎕THIS).##.IMeterProvider∊⊃⎕CLASS ⍵}⊃⎕RSI
          'ObservableGauge must be created from Meter'⎕SIGNAL 982
      :EndIf
      :If 4=≢⊆args
          name description _callback _callspace←args
      :Else
          name description←2↑(⊆arg),⊂'' 
      :EndIf
      ⍝
    ∇
    
    ∇ WithCallback arg;callspace
      :Access Public
      :If 0=10|⎕DR arg
          callspace←⊃⎕RSI
      :AndIf 3=callspace.⎕NC⍕arg
          _callspace _callback←callspace arg
      :Else
          'Argument must be a valid APL function'⎕SIGNAL 11
      :EndIf
    ∇
    
    ∇ r←Collect
      :Access Public
      :If 0=⎕NC'_callback'
          r←⍬
      :Else
          r←⎕NS''
          r.name←name
          r.unit←'1'
          r.description←''
          r.gauge←⎕NS''
          r.gauge.dataPoints←,{
              dp←⎕NS''
              dp.asDouble←⊃⍵
              1=≢⍵:dp
              dp.attributes←toKeyValue/{(⊂⍋⍵)⌷⍵}toKeyValueMatrix 1↓⍵
              dp
          }¨(_callspace.⍎_callback)
          r.gauge.dataPoints.timeUnixNano←⊂timeUnixNano 0
      :EndIf
    ∇
    
    
:EndClass
