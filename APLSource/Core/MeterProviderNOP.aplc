:Class MeterProviderNOP: IMeterProvider
    :Field Private Instance _instruments←⍬

    ∇ make
      :Access Public Instance
      :Implements Constructor
      PS←(⊃⊃⎕CLASS ⎕THIS).##
    ∇

    ∇ r←GetMeter args
      :Implements Method IMeterProvider.GetMeter
      r←⎕NEW PS.MeterNOP
    ∇

    ∇ r←Shutdown
      :Implements Method IMeterProvider.Shutdown
      r←⍬
    ∇

    ∇ r←ForceFlush
      :Implements Method IMeterProvider.ForceFlush
      r←⍬
    ∇

    ∇ r←AddView bounds
      :Implements Method IMeterProvider.AddView
      r←⍬
    ∇
    ∇ instrument←CreateCounter(meter name)
      :Access Public Instance
      instrument←⎕NEW PS.CounterNOP name
    ∇

    ∇ instrument←CreateGauge(meter name)
      :Access Public Instance
      instrument←⎕NEW PS.GaugeNOP name
    ∇

    ∇ instrument←CreateObservableGauge(meter name)
      :Access Public Instance
      instrument←⎕NEW PS.ObservableGaugeNOP 
    ∇

    ∇ instrument←CreateHistogram(meter arg)
      :Access Public Instance
      instrument←⎕NEW PS.HistogramNOP
    ∇

    ∇ instrument←CreateUpDownCounter(meter name)
      :Access Public Instance
      instrument←⎕NEW PS.UpDownCounterNOP name
    ∇
    ⍝
:EndClass
