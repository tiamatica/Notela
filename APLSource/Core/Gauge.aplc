:Class Gauge: IInstrument
    :Include Tools
⍝
    :Field Private Instance DEBUG←0
    :Field Private Instance name
    :Field Private Instance description
    :Field Private Instance startTime
    :Field Private Instance _metric

    ∇ make2(metric args debug);name;description
      :Access Public
      :Implements Constructor
      DEBUG←debug
      :If {0::1 ⋄ ~(⊃⊃⎕CLASS ⎕THIS).##.IMeterProvider∊⊃⎕CLASS ⍵}⊃⎕RSI
          'Gauge must be created from Meter'⎕SIGNAL 11
      :EndIf
      name description←2↑⊆args
      startTime←timeUnixNano 0
     
      _metric←metric
      _metric.name←name
      _metric.unit←,'1'
      _metric.description←description
      _metric.(gauge←⎕NS'')
      _metric.gauge.dataPoints←⍬
      ⍝
    ∇

    ∇ Record args;value;attrs;dp
      :Implements Method IInstrument.Record
      :Trap DEBUG↓0
          value←⊃args
          attrs←{(⊂⍋⍵)⌷⍵}toKeyValueMatrix 1↓args
          dp←_metric.gauge.⎕NS''
          dp.asDouble←value
          dp.startTimeUnixNano←startTime
          dp.timeUnixNano←timeUnixNano 0
          dp.attributes←toKeyValue/attrs
          _metric.gauge.dataPoints,←dp
          ##.ProcessMetrics
      :EndTrap
    ∇

    ∇ Clear
      :Implements Method IInstrument.Clear
      :Trap DEBUG↓0
          _metric.gauge.dataPoints←⍬
      :EndTrap
    ∇

    ∇ Collect
      :Implements Method IInstrument.Collect
      ⍝ nothing to do
    ∇

:EndClass

